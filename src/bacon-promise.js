// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = function($) {
    return Bacon.Observable.prototype.toDeferred = function() {
      var dfd, value;
      value = void 0;
      dfd = $.Promise.deferred() || $.Deferred();
      this.take(1).endOnError().subscribe(function(evt) {
        if (evt.hasValue()) {
          value = evt.value();
          return dfd.notify(value);
        } else if (evt.isError()) {
          return dfd.reject(evt.error);
        } else if (evt.isEnd()) {
          return dfd.resolve(value);
        }
      });
      return dfd;
    };
  };

}).call(this);

//# sourceMappingURL=bacon-promise.js.map
